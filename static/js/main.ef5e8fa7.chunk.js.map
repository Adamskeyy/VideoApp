{"version":3,"sources":["components/Header/index.js","helpers/localStorage.js","redux/videoAppSlice.js","api/youtube.js","api/vimeo.js","hooks/useValidate.js","components/InputForm/index.js","redux/selectors.js","components/VideoModal/index.js","components/VideoCard/index.js","components/SortBy/index.js","components/DeleteAllModal/index.js","components/VideoList/index.js","App.js","redux/store.js","index.js"],"names":["Header","storeVideo","video","videos","localStorage","getItem","push","setItem","JSON","stringify","parse","OLDEST","NEWEST","VIMEO","YOUTUBE","fetchVideoById","createAsyncThunk","videoId","origin","dispatch","axios","get","process","youtubeEndpoint","then","res","videoData","data","items","addVideo","catch","err","setErrorMessage","vimeoEndpoint","headers","Authorization","videoAppSlice","createSlice","name","initialState","sortType","originSite","errorMessage","loading","reducers","fetchVideos","state","payload","id","title","snippet","views","statistics","viewCount","likes","likeCount","thumbnail","thumbnails","medium","url","rawDateTime","Date","addedAt","format","toString","favourite","metadata","connections","total","pictures","sizes","link","removeVideo","forEach","index","splice","deleteVideoFromStorage","filter","clearVideoList","removeItem","toggleFavourite","updatedVideo","updateVideoInStorage","sortByOldest","sortByNewest","action","setOriginSite","extraReducers","pending","fulfilled","rejected","actions","useValidate","useSelector","videoApp","useDispatch","validateYouTubeUrl","match","validateVimeoUrl","validateInput","inputText","inputType","numbersOnlyString","test","length","isIdValid","getVideoId","checkForUniqueId","some","getOriginSiteFromId","getOriginSiteFromUrl","InputForm","useState","setInputText","setInputType","Form","className","onSubmit","e","preventDefault","validated","FormGroup","ButtonGroup","Button","active","outline","onClick","Input","invalid","type","placeholder","value","onChange","target","FormFeedback","tooltip","color","videoSortSelector","createSelector","sort","a","b","getTime","VideoModal","modal","setModal","toggleModal","modalIframe","width","height","src","frameBorder","allow","allowFullScreen","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","VideoCard","iframe","taskItemClasses","thumbnailRedirect","Card","CardImg","top","alt","style","cursor","window","open","CardBody","CardTitle","tag","CardSubtitle","toggledFavourite","SortBy","dropdownOpen","setDropdownOpen","Dropdown","display","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","DeleteAllModal","justifyContent","VideoList","isListLayout","setIsListLayout","showFavourites","setShowFavourites","selectedPage","setSelectedPage","from","to","videosToDisplay","v","videosOnCurrentPage","slice","useEffect","favouriteIconClasses","videoList","map","controlButtons","prev","pagination","defaultActivePage","totalItems","pageSize","onSelect","App","configureStore","reducer","videoAppReducer","middleware","getDefaultMiddleware","thunk","extraArgument","serializableCheck","app","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef5e8fa7.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <>\r\n      <h1>Video App</h1>\r\n      <h3>Vimeo &amp; Youtube</h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const storeVideo = (video) => {\r\n  let videos;\r\n  if (localStorage.getItem('videos') === null) {\r\n    videos = [];\r\n    videos.push(video);\r\n    localStorage.setItem('videos', JSON.stringify(videos));\r\n  } else {\r\n    videos = JSON.parse(localStorage.getItem('videos'));\r\n    videos.push(video);\r\n    localStorage.setItem('videos', JSON.stringify(videos));\r\n  }\r\n};\r\n\r\nconst getVideosFromStorage = () => {\r\n  let videos;\r\n  if (localStorage.getItem('videos') === null) {\r\n    videos = [];\r\n  } else {\r\n    videos = JSON.parse(localStorage.getItem('videos'));\r\n  }\r\n  return videos;\r\n};\r\n\r\nconst updateVideoInStorage = (updatedVideo) => {\r\n  let videos = JSON.parse(localStorage.getItem('videos'));\r\n\r\n  videos.forEach((video, index) => {\r\n    if (updatedVideo.id === video.id) {\r\n      videos.splice(index, 1, updatedVideo);\r\n    }\r\n  });\r\n  localStorage.setItem('videos', JSON.stringify(videos));\r\n};\r\n\r\nconst deleteVideoFromStorage = (id) => {\r\n  let videos = JSON.parse(localStorage.getItem('videos'));\r\n\r\n  videos.forEach((video, index) => {\r\n    if (id === video.id) {\r\n      videos.splice(index, 1);\r\n    }\r\n  });\r\n  localStorage.setItem('videos', JSON.stringify(videos));\r\n};\r\n\r\nconst clearVideosFromStorage = () => {\r\n  localStorage.removeItem('videos');\r\n};\r\n\r\nexport {\r\n  storeVideo,\r\n  getVideosFromStorage,\r\n  updateVideoInStorage,\r\n  deleteVideoFromStorage,\r\n  clearVideosFromStorage,\r\n};\r\n","// redux\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n// axios\r\nimport axios from 'axios';\r\n// date-fns\r\nimport { format } from 'date-fns';\r\n// local storage methods\r\nimport {\r\n  storeVideo,\r\n  getVideosFromStorage,\r\n  updateVideoInStorage,\r\n  deleteVideoFromStorage,\r\n  clearVideosFromStorage,\r\n} from '../helpers/localStorage';\r\n// vimeo endpoint\r\nimport { vimeoEndpoint } from '../api/vimeo';\r\n// youtube endpoint\r\nimport { youtubeEndpoint } from '../api/youtube';\r\n// constants\r\nexport const OLDEST = 'oldest';\r\nexport const NEWEST = 'newest';\r\nexport const VIMEO = 'vimeo';\r\nexport const YOUTUBE = 'youtube';\r\n\r\nexport const fetchVideoById = createAsyncThunk(\r\n  'videoApp/fetchVideoById',\r\n  ({ videoId, origin }, { dispatch }) => {\r\n    if (origin === YOUTUBE) {\r\n      axios\r\n        .get(youtubeEndpoint(videoId))\r\n        .then((res) => {\r\n          let videoData = res.data.items[0];\r\n          dispatch(addVideo(videoData));\r\n        })\r\n        .catch((err) => {\r\n          // to improve\r\n          if (err) {\r\n            dispatch(setErrorMessage('Video not found!'));\r\n          }\r\n        });\r\n    }\r\n\r\n    if (origin === VIMEO) {\r\n      axios\r\n        .get(vimeoEndpoint(videoId), {\r\n          headers: {\r\n            Authorization: `Bearer ${process.env.REACT_APP_VIMEO_ACCESS_TOKEN}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          let videoData = { ...res.data, videoId };\r\n          dispatch(addVideo(videoData));\r\n        })\r\n        .catch((err) => {\r\n          // to improve\r\n          if (err) {\r\n            dispatch(setErrorMessage('Video not found!'));\r\n          }\r\n        });\r\n    }\r\n  }\r\n);\r\n\r\nconst videoAppSlice = createSlice({\r\n  name: 'videoApp',\r\n  initialState: {\r\n    sortType: NEWEST,\r\n    originSite: '',\r\n    videos: [],\r\n    errorMessage: '',\r\n    loading: false,\r\n  },\r\n  reducers: {\r\n    fetchVideos: (state) => {\r\n      state.videos = getVideosFromStorage();\r\n    },\r\n    addVideo: (state, { payload }) => {\r\n      let video;\r\n      if (state.originSite === YOUTUBE) {\r\n        video = {\r\n          origin: state.originSite,\r\n          id: payload.id,\r\n          title: payload.snippet.title,\r\n          views: payload.statistics.viewCount,\r\n          likes: payload.statistics.likeCount,\r\n          thumbnail: payload.snippet.thumbnails.medium.url,\r\n          rawDateTime: new Date(),\r\n          addedAt: format(new Date(), 'dd.MM.yyyy, kk:mm').toString(),\r\n          favourite: false,\r\n        };\r\n        state.videos.push(video);\r\n        storeVideo(video);\r\n      }\r\n      if (state.originSite === VIMEO) {\r\n        video = {\r\n          origin: state.originSite,\r\n          id: payload.videoId,\r\n          title: payload.name,\r\n          likes: payload.metadata.connections.likes.total,\r\n          thumbnail: payload.pictures.sizes[0].link,\r\n          rawDateTime: new Date(),\r\n          addedAt: format(new Date(), 'dd.MM.yyyy, kk:mm').toString(),\r\n          favourite: false,\r\n        };\r\n        state.videos.push(video);\r\n        storeVideo(video);\r\n      }\r\n    },\r\n    removeVideo: (state, { payload }) => {\r\n      deleteVideoFromStorage(payload);\r\n      state.videos = [...state.videos.filter(({ id }) => id !== payload)];\r\n    },\r\n    clearVideoList: (state) => {\r\n      state.videos = [];\r\n      clearVideosFromStorage();\r\n    },\r\n    toggleFavourite: (state, { payload }) => {\r\n      updateVideoInStorage(payload);\r\n      state.videos.forEach((video, index) => {\r\n        if (payload.id === video.id) {\r\n          state.videos.splice(index, 1, payload);\r\n        }\r\n      });\r\n    },\r\n    sortByOldest: (state) => {\r\n      state.sortType = OLDEST;\r\n    },\r\n    sortByNewest: (state) => {\r\n      state.sortType = NEWEST;\r\n    },\r\n    setErrorMessage: (state, action) => {\r\n      state.errorMessage = action.payload;\r\n    },\r\n    setOriginSite: (state, action) => {\r\n      state.originSite = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchVideoById.pending]: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n    [fetchVideoById.fulfilled]: (state, action) => {\r\n      state.loading = false;\r\n    },\r\n    [fetchVideoById.rejected]: (state, action) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchVideos,\r\n  addVideo,\r\n  removeVideo,\r\n  clearVideoList,\r\n  toggleFavourite,\r\n  sortByNewest,\r\n  sortByOldest,\r\n  setErrorMessage,\r\n  setOriginSite,\r\n} = videoAppSlice.actions;\r\n\r\nexport default videoAppSlice.reducer;\r\n","export const youtubeEndpoint = (videoId) =>\r\n  `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}&part=snippet,statistics`;\r\n","export const vimeoEndpoint = (videoId) =>\r\n  `https://api.vimeo.com/videos/${videoId}?fields=metadata%2C%20pictures%2C%20name&sizes=295x166`;\r\n","// redux\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setErrorMessage } from '../redux/videoAppSlice';\r\nimport { VIMEO, YOUTUBE } from '../redux/videoAppSlice';\r\n\r\nconst useValidate = () => {\r\n  const videos = useSelector((state) => state.videoApp.videos);\r\n  const dispatch = useDispatch();\r\n\r\n  const validateYouTubeUrl = (url) => {\r\n    const regExp = /^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})?$/;\r\n    if (url.match(regExp)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const validateVimeoUrl = (url) => {\r\n    const regExp = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|video\\/|)(\\d+)(?:$|\\/|\\?)/;\r\n    if (url.match(regExp)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const isUrlValid = (url) => {\r\n    if (validateYouTubeUrl(url)) {\r\n      return true;\r\n    }\r\n    if (validateVimeoUrl(url)) {\r\n      return true;\r\n    }\r\n    dispatch(setErrorMessage('Invalid Video URL!'));\r\n    return false;\r\n  };\r\n\r\n  const isIdValid = (id) => {\r\n    const numbersOnlyString = /^\\d+$/.test(id);\r\n    // if id doesn't contain only numbers and its length === 11 it's youtube id\r\n    if (id.length === 11 && !numbersOnlyString) {\r\n      return true;\r\n    }\r\n    // if id contain purely numbers it's vimeo id\r\n    if (numbersOnlyString) {\r\n      return true;\r\n    }\r\n    dispatch(setErrorMessage('Invalid Video ID!'));\r\n    return false;\r\n  };\r\n\r\n  const checkForUniqueId = (id) => {\r\n    if (videos.some((video) => video.id === id)) {\r\n      dispatch(setErrorMessage('Video already in database!'));\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const getOriginSiteFromId = (id) => {\r\n    const numbersOnlyString = /^\\d+$/.test(id);\r\n    if (id.length === 11 && !numbersOnlyString) {\r\n      return YOUTUBE;\r\n    }\r\n    if (numbersOnlyString) {\r\n      return VIMEO;\r\n    }\r\n  };\r\n\r\n  const getOriginSiteFromUrl = (url) => {\r\n    if (validateYouTubeUrl(url)) {\r\n      return YOUTUBE;\r\n    }\r\n    if (validateVimeoUrl(url)) {\r\n      return VIMEO;\r\n    }\r\n  };\r\n\r\n  const validateInput = (inputText, inputType) => {\r\n    const isInputEmpty = inputText === '';\r\n    if (isInputEmpty) {\r\n      dispatch(setErrorMessage('You forgot to pass something!'));\r\n      return false;\r\n    }\r\n    if (inputType === 'id') {\r\n      return isIdValid(inputText);\r\n    }\r\n    if (inputType === 'url') {\r\n      return isUrlValid(inputText);\r\n    }\r\n  };\r\n\r\n  // get Id if input === url\r\n  const getVideoId = (url) => {\r\n    const videoIdRegExp = /^.*((youtu.be\\/|vimeo.com\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\\\&\\\\?]*).*/;\r\n    const match = url.match(videoIdRegExp);\r\n    const videoId = match[7];\r\n    return videoId;\r\n  };\r\n\r\n  return {\r\n    validateInput,\r\n    getVideoId,\r\n    checkForUniqueId,\r\n    getOriginSiteFromId,\r\n    getOriginSiteFromUrl,\r\n  };\r\n};\r\n\r\nexport default useValidate;\r\n","// reactstrap / styles\r\nimport {\r\n  Input,\r\n  ButtonGroup,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport './InputForm.css';\r\n// hooks\r\nimport { useState } from 'react';\r\n// redux\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchVideoById,\r\n  setErrorMessage,\r\n  setOriginSite,\r\n} from '../../redux/videoAppSlice';\r\n// validation\r\nimport useValidate from '../../hooks/useValidate';\r\n\r\nconst InputForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { errorMessage } = useSelector((state) => state.videoApp);\r\n  const [inputText, setInputText] = useState('');\r\n  const [inputType, setInputType] = useState('url');\r\n  // validation\r\n  const {\r\n    validateInput,\r\n    getVideoId,\r\n    checkForUniqueId,\r\n    getOriginSiteFromId,\r\n    getOriginSiteFromUrl,\r\n  } = useValidate();\r\n\r\n  const onChange = (e) => {\r\n    dispatch(setErrorMessage(''));\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validated = validateInput(inputText, inputType);\r\n    let videoId = inputText;\r\n    if (validated && inputType === 'url') {\r\n      videoId = getVideoId(inputText);\r\n    }\r\n    if (validated && checkForUniqueId(videoId)) {\r\n      const origin =\r\n        inputType === 'id'\r\n          ? getOriginSiteFromId(inputText)\r\n          : getOriginSiteFromUrl(inputText);\r\n      dispatch(setOriginSite(origin));\r\n      dispatch(fetchVideoById({ videoId, origin }));\r\n    }\r\n    setInputText('');\r\n  };\r\n\r\n  return (\r\n    <Form className=\"inputForm\" onSubmit={onSubmit}>\r\n      <FormGroup>\r\n        <ButtonGroup>\r\n          <Button\r\n            active={inputType === 'url'}\r\n            outline\r\n            onClick={() => setInputType('url')}\r\n          >\r\n            URL\r\n          </Button>\r\n          <Button\r\n            active={inputType === 'id'}\r\n            outline\r\n            onClick={() => setInputType('id')}\r\n          >\r\n            ID\r\n          </Button>\r\n        </ButtonGroup>\r\n      </FormGroup>\r\n      <div className=\"inputRow m-2\">\r\n        <FormGroup className=\"position-relative inputBox\">\r\n          <Input\r\n            invalid={errorMessage !== ''}\r\n            type=\"text\"\r\n            name=\"clipName\"\r\n            id=\"clipName\"\r\n            placeholder={`Paste in clip ${inputType}...`}\r\n            value={inputText}\r\n            onChange={onChange}\r\n          />\r\n          <FormFeedback tooltip>{errorMessage}</FormFeedback>\r\n        </FormGroup>\r\n        <Button\r\n          className=\"submitButton ml-2 mr-2 mb-2\"\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n        >\r\n          Add Clip\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import { createSelector } from 'reselect';\r\nimport { OLDEST, NEWEST } from './videoAppSlice';\r\n\r\nconst videosSelector = (state) => state.videoApp.videos;\r\n\r\nconst sortTypeSelector = (state) => state.videoApp.sortType;\r\n\r\nexport const videoSortSelector = createSelector(\r\n  videosSelector,\r\n  sortTypeSelector,\r\n  (videos, sortType) => {\r\n    if (sortType === OLDEST) {\r\n      const sortedByOldest = [...videos].sort(\r\n        (a, b) =>\r\n          new Date(a.rawDateTime).getTime() - new Date(b.rawDateTime).getTime()\r\n      );\r\n      return sortedByOldest;\r\n    }\r\n    if (sortType === NEWEST) {\r\n      const sortedByNewest = [...videos].sort(\r\n        (a, b) =>\r\n          new Date(b.rawDateTime).getTime() - new Date(a.rawDateTime).getTime()\r\n      );\r\n      return sortedByNewest;\r\n    }\r\n  }\r\n);\r\n","// hooks\r\nimport { useState } from 'react';\r\n// reactstrap/styles\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport './VideoModal.css';\r\n\r\nconst VideoModal = ({ videoId, origin, title }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggleModal = () => setModal(!modal);\r\n\r\n  const modalIframe =\r\n    origin === 'youtube' ? (\r\n      <div className=\"video-responsive\">\r\n        <iframe\r\n          width=\"853\"\r\n          height=\"480\"\r\n          src={`https://www.youtube.com/embed/${videoId}`}\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n          title=\"Embedded youtube\"\r\n        />\r\n      </div>\r\n    ) : (\r\n      <div className=\"video-responsive\">\r\n        <iframe\r\n          src={`https://player.vimeo.com/video/${videoId}?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=210552`}\r\n          width=\"1920\"\r\n          height=\"1080\"\r\n          frameBorder=\"0\"\r\n          allow=\"autoplay; fullscreen; picture-in-picture\"\r\n          title={title}\r\n        ></iframe>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"m-2\" color=\"warning\" onClick={toggleModal}>\r\n        Play\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal} />\r\n        <ModalBody>{modalIframe}</ModalBody>\r\n        <ModalFooter />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoModal;\r\n","// reactstrap\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardImg,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n} from 'reactstrap';\r\nimport './VideoCard.css';\r\n// redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeVideo, toggleFavourite } from '../../redux/videoAppSlice';\r\n// components\r\nimport VideoModal from '../VideoModal';\r\n\r\nconst VideoCard = ({ video }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    id,\r\n    title,\r\n    views,\r\n    likes,\r\n    addedAt,\r\n    thumbnail,\r\n    favourite,\r\n    origin,\r\n    iframe,\r\n  } = video;\r\n\r\n  const handleToggleFavourite = () => {\r\n    const toggledFavourite = {\r\n      ...video,\r\n      favourite: !favourite,\r\n    };\r\n    dispatch(toggleFavourite(toggledFavourite));\r\n  };\r\n\r\n  const taskItemClasses = video.favourite\r\n    ? 'fa fa-star ml-2 mr-2 checked'\r\n    : 'fa fa-star ml-2 mr-2';\r\n\r\n  const thumbnailRedirect =\r\n    origin === 'youtube'\r\n      ? `https://www.youtube.com/watch?v=${id}`\r\n      : `https://vimeo.com/${id}`;\r\n\r\n  return (\r\n    <li className=\"listItem\">\r\n      <Card className=\"videoCard\">\r\n        <CardImg\r\n          top\r\n          width=\"100%\"\r\n          src={thumbnail}\r\n          alt={title}\r\n          style={{ cursor: 'pointer' }}\r\n          onClick={() => window.open(thumbnailRedirect, '_blank')}\r\n        />\r\n        <CardBody className=\"cardContent\">\r\n          <div className=\"cardData\">\r\n            <CardTitle tag=\"h5\">{title}</CardTitle>\r\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n              {origin === 'youtube' ? <p>Views: {views}</p> : null}\r\n            </CardSubtitle>\r\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n              <p>Likes: {likes}</p>\r\n            </CardSubtitle>\r\n            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n              <p>Added: {addedAt}</p>\r\n            </CardSubtitle>\r\n          </div>\r\n          <div className=\"cardButtons\">\r\n            <VideoModal\r\n              videoId={id}\r\n              origin={origin}\r\n              iframe={iframe}\r\n              title={title}\r\n            />\r\n            <Button onClick={handleToggleFavourite} color=\"secondary\">\r\n              <span className={taskItemClasses}></span>\r\n            </Button>\r\n            <Button\r\n              className=\"m-2\"\r\n              color=\"danger\"\r\n              onClick={() => dispatch(removeVideo(id))}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default VideoCard;\r\n","// hooks\r\nimport React, { useState } from 'react';\r\n// reactstrap\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\n// redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { sortByNewest, sortByOldest } from '../../redux/videoAppSlice';\r\n\r\nconst SortBy = () => {\r\n  const dispatch = useDispatch();\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  return (\r\n    <Dropdown\r\n      style={{ display: 'inline-block' }}\r\n      className=\"m-2\"\r\n      isOpen={dropdownOpen}\r\n      toggle={toggleDropdown}\r\n    >\r\n      <DropdownToggle caret>Sort by</DropdownToggle>\r\n      <DropdownMenu>\r\n        <DropdownItem onClick={() => dispatch(sortByOldest())}>\r\n          Oldest\r\n        </DropdownItem>\r\n        <DropdownItem onClick={() => dispatch(sortByNewest())}>\r\n          Newest\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","// hooks\r\nimport { useState } from 'react';\r\n// reactstrap\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n// redux\r\nimport { useDispatch } from 'react-redux';\r\nimport { clearVideoList } from '../../redux/videoAppSlice';\r\n\r\nconst DeleteAllModal = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleModal = () => setModal(!modal);\r\n\r\n  const deleteAll = () => {\r\n    dispatch(clearVideoList());\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"m-2\" color=\"danger\" onClick={toggleModal}>\r\n        Delete All\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal} />\r\n        <ModalBody>Are you sure?</ModalBody>\r\n        <ModalFooter\r\n          style={{ display: 'flex', justifyContent: 'space-between' }}\r\n        >\r\n          <Button className=\"m-2\" color=\"danger\" onClick={deleteAll}>\r\n            Yes\r\n          </Button>{' '}\r\n          <Button className=\"m-2\" color=\"secondary\" onClick={toggleModal}>\r\n            No\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteAllModal;\r\n","// reactstrap / styles\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\nimport PaginationComponent from 'react-reactstrap-pagination';\r\nimport './VideoList.css';\r\n// hooks\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// redux\r\nimport { fetchVideos } from '../../redux/videoAppSlice';\r\n// selectors\r\nimport { videoSortSelector } from '../../redux/selectors';\r\n// components\r\nimport VideoCard from '../VideoCard';\r\nimport SortBy from '../SortBy';\r\nimport DeleteAllModal from '../DeleteAllModal';\r\n// variables\r\nconst ITEMS_PER_PAGE = 5;\r\n\r\nconst VideoList = () => {\r\n  // video state\r\n  const dispatch = useDispatch();\r\n  const videos = useSelector(videoSortSelector);\r\n  // UI state\r\n  const [isListLayout, setIsListLayout] = useState(false);\r\n  const [showFavourites, setShowFavourites] = useState(false);\r\n  // pagination\r\n  const [selectedPage, setSelectedPage] = useState(1);\r\n  const from = (selectedPage - 1) * ITEMS_PER_PAGE;\r\n  const to = selectedPage * ITEMS_PER_PAGE;\r\n  const videosToDisplay = videos.filter((v) => !showFavourites || v.favourite);\r\n  const videosOnCurrentPage = videosToDisplay.slice(from, to);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchVideos());\r\n  }, [dispatch]);\r\n\r\n  const handleSelected = (selectedPage) => {\r\n    setSelectedPage(selectedPage);\r\n  };\r\n\r\n  const handleFavouriteFilter = () => {\r\n    setShowFavourites((prev) => !prev);\r\n  };\r\n\r\n  const favouriteIconClasses = showFavourites\r\n    ? 'fa fa-star checked'\r\n    : 'fa fa-star';\r\n\r\n  const videoList = videosToDisplay.length ? (\r\n    <ul className={isListLayout ? 'videoList' : 'videoGrid'}>\r\n      {videosOnCurrentPage.map((video) => (\r\n        <VideoCard key={video.id} video={video} />\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>There is nothing to display!</p>\r\n  );\r\n\r\n  const controlButtons = (\r\n    <div className=\"controlBar\">\r\n      <div className=\"controlButtons\">\r\n        <ButtonGroup className=\"m-2\">\r\n          <Button\r\n            active={isListLayout}\r\n            outline\r\n            onClick={() => setIsListLayout(true)}\r\n          >\r\n            <i className=\"fa fa-bars\"></i>\r\n          </Button>\r\n          <Button\r\n            active={!isListLayout}\r\n            outline\r\n            onClick={() => setIsListLayout(false)}\r\n          >\r\n            <i className=\"fa fa-th-large\"></i>\r\n          </Button>\r\n        </ButtonGroup>\r\n        <SortBy />\r\n        <Button\r\n          className=\"m-2\"\r\n          onClick={handleFavouriteFilter}\r\n          color=\"secondary\"\r\n        >\r\n          <span className={favouriteIconClasses}></span>\r\n        </Button>\r\n      </div>\r\n      <DeleteAllModal />\r\n    </div>\r\n  );\r\n\r\n  const pagination = videosToDisplay.length ? (\r\n    <PaginationComponent\r\n      defaultActivePage={selectedPage}\r\n      totalItems={videosToDisplay.length}\r\n      pageSize={ITEMS_PER_PAGE}\r\n      onSelect={handleSelected}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <>\r\n      {controlButtons}\r\n      {videoList}\r\n      {pagination}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n","// components\r\nimport Header from './components/Header';\r\nimport InputForm from './components/InputForm';\r\nimport VideoList from './components/VideoList';\r\n// styles\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <InputForm />\r\n      <VideoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// redux\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { fetchVideoById } from './videoAppSlice';\r\n// reducer\r\nimport videoAppReducer from './videoAppSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    videoApp: videoAppReducer,\r\n  },\r\n  middleware: (\r\n    getDefaultMiddleware // getting rid of serializable check error when handling momentjs objects\r\n  ) =>\r\n    getDefaultMiddleware({\r\n      thunk: {\r\n        extraArgument: fetchVideoById,\r\n      },\r\n      serializableCheck: false,\r\n    }),\r\n});\r\n","import ReactDOM from 'react-dom';\r\n// application\r\nimport App from './App';\r\n// styles\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// redux\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n"],"sourceRoot":""}